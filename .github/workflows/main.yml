# Définition du workflow de CI pour une architecture multiplateforme
name: Multi-Arch CI

# Déclenché à chaque push sur le dépôt
on: [push]

jobs:
  # Job principal pour la construction et les tests
  build-and-test:
    # S'exécute sur une machine Ubuntu
    runs-on: ubuntu-latest
    
    # Stratégie de matrice pour exécuter le job sur différentes architectures
    strategy:
      matrix:
        arch: 
          - linux/amd64
          - linux/arm64

    steps:
    # Étape pour récupérer le code du dépôt
    - name: Checkout code
      uses: actions/checkout@v4
    # Étape pour configurer QEMU en fonction de la matrice spécifiée
    - name: Set up QEMU
    # Utilisation de l'action docker/setup-qemu-action version 1
      uses: docker/setup-qemu-action@v3
    # Configuration des plates-formes QEMU en fonction de la matrice (arm64 ou amd64)
      with:
        platforms: ${{ matrix.arch }}
    # Étape pour exécuter les tests sur l'architecture arm64
    - name: Run test on arm
      if: matrix.arch == 'linux/arm64'
      run: |
        echo "start build on arm64"  # Message de début du build sur arm64
        docker build -t img_one_arm --platform linux/arm64 .  # build de l'image Docker pour arm64
        echo "start run on arm64"  # Message de début de l'exécution sur arm64
        docker run --rm --platform linux/arm64 img_one_arm --image "assets/target-small.png" --tiles "assets/tiles-small"  # Exécution des tests sur arm64

    # Étape pour exécuter les tests sur l'architecture amd64
    - name: Run test on amd
      if: matrix.arch == 'linux/amd64'
      run: |
        echo "start build on amd64"  # Message de début de la build sur amd64
        docker build -t img_one --platform linux/amd64 .  # build de l'image Docker pour amd64
        echo "start build on amd64"  # Message de début de l'exécution sur amd64
        docker run --rm --platform linux/amd64 img_one --image "assets/target-small.png" --tiles "assets/tiles-small"  # Exécution des tests sur amd64


#docker build -t img_one_arm --platform linux/arm64
#docker build -t img_one --platform linux/amd64

#docker run  --rm --platform linux/amd64 img_one --image "assets/target-small.png" --tiles "assets/tiles-small" 
#docker run  --rm --platform linux/arm64 img_one --image "assets/target-small.png" --tiles "assets/tiles-small" 

#question : comment recuperer notre dockerfile 
#           comment fonctionne QEMU pour github action 
#           on a un if pour l'archi masi comment on simule l'archi 
